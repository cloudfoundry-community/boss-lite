#!/bin/bash

# This is the parent script for all helper commands

set -e

boss_lite_repo=${boss_lite_repo:-"https://github.com/cloudfoundry-community/boss-lite.git"}
boss_lite_branch=${boss_lite_branch:-"master"}
bosh_lite_repo=${bosh_lite_repo:-"https://github.com/cloudfoundry/bosh-lite.git"}
bosh_lite_branch=${bosh_lite_branch:-"master"}

base_path="deployments"

checkenv() {
  if [[ ! -f ${BOSH_LITE_PRIVATE_KEY} ]]; then
    echo "\$BOSH_LITE_PRIVATE_KEY does not exist: $BOSH_LITE_PRIVATE_KEY"
    exit 1
  fi
  relative_private_key="${PWD}/${BOSH_LITE_PRIVATE_KEY##${PWD}}"
  if [[ ! -f ${relative_private_key} ]]; then
    echo "\$BOSH_LITE_PRIVATE_KEY is not within this project: $BOSH_LITE_PRIVATE_KEY"
    exit 1
  fi
}

new() {
  checkenv
  name=$1
  if [[ "${name}X" == "X" ]]; then
    echo "USAGE: boss-lite new NAME"
    exit 1
  fi
  shift
  path=${base_path}/${name}
  mkdir -p ${path}
  cp bosh-lite/Vagrantfile ${path}/
  cp .envrc ${path}/
  ln -s ../../sshkeys ${path}/sshkeys
  cd ${path}
  direnv allow

  export BOSH_LITE_NAME="bosh-lite-${name}"
  vagrant up --provider=aws

  IP=$(vagrant ssh-config | grep HostName | awk '{print $2}')
  set -x
  yes admin | bosh target ${IP} ${name}
  bosh -t ${name} upload stemcell https://bosh.io/d/stemcells/bosh-warden-boshlite-ubuntu-trusty-go_agent
}

ssh() {
  checkenv
  name=$1
  if [[ "${name}X" == "X" ]]; then
    echo "USAGE: boss-lite ssh NAME"
    exit 1
  fi
  shift
  path=${base_path}/${name}
  cd ${path}
  vagrant ssh
}

destroy() {
  name=$1
  if [[ "${name}X" == "X" ]]; then
    echo "USAGE: boss-lite destroy NAME"
    exit 1
  fi
  shift
  path=${base_path}/${name}
  if [[ ! -d ${path} ]]; then
    echo "USAGE: boss-lite destroy NAME"
    exit 1
  fi
  pushd ${path}
  vagrant destroy $@
  popd
  rm -rf ${path}
}

update() {
  git subtree pull --prefix boss-lite $boss_lite_repo $boss_lite_branch --squash \
    -m "Update boss-lite scripts"
  git subtree pull --prefix bosh-lite $bosh_lite_repo $bosh_lite_branch --squash \
    -m "Update bosh-lite scripts"
}

if [[ $1 =~ ^(new|ssh|destroy|update|checkenv)$ ]]; then
  "$@"
else
  echo "Invalid subcommand: $1 - available: new, ssh, destroy, update" >&2
  exit 1
fi
